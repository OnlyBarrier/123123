// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  customerId String
  password   String
  role       Role     @default(BASIC)
  // employees Employee[]
  // customer Customer[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  BASIC //usuario base  cualquier cliente
  EMPLOYEE // empleado de alguna secci贸n
  ACOUNTING // contabilidad acceso a datos relacionados con cuentas
  STORAGE //   bodega  accesos a temas relacionados con bodega
  ADMIN //   administrador
}

model Invoice {
  id              String   @id @default(uuid())
  serial          String   @unique
  userId          String?
  date            String
  customerName    String
  customerId      String
  total           Float
  active          Boolean
  blNumber        String?
  containerNumber String?
  nature          String //tipo de operaci贸n Venta exportacion devolucion compra etc
  receiverType    String
  rucType         String
  paymentMethods  String
  telephones      String   @default("none")
  emails          String   @default("none")
  address         String   @default("none")
  eInvoiceCreated Boolean  @default(false)
  items           Items[]
  updatedAt       DateTime @updatedAt
  createdAt       DateTime @default(now())
}

model Items {
  id          String   @id @default(uuid())
  idInvoice   String
  description String
  value       String
  tax         String   @default("0")
  invoice     Invoice  @relation(fields: [idInvoice], references: [id])
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}

model Shipping {
  id              String   @id @default(uuid())
  name            String
  userId          String?  @unique
  blNumber        String   @unique
  date            String
  description     String
  dimensions      String?
  volume          String?
  containerNumber String
  comments        String?
  active          Boolean
  updatedAt       DateTime @updatedAt
  createdAt       DateTime @default(now())
}

model Entry {
  id              String      @id @default(uuid())
  userId          String?     @unique
  name            String
  date            String
  sealNumber      String
  blNumber        String?
  comments        String?
  active          Boolean
  totalContainers String
  entryNumber     Int //numero que aumenta en cada entry
  updatedAt       DateTime    @updatedAt
  createdAt       DateTime    @default(now())
  containers      Container[] // Relaci贸n one-to-many con Container
}

model Container {
  id              String    @id @default(uuid())
  ruc             String
  name            String
  containerNumber String    @default("")
  active          Boolean   @default(true)
  wareHouseName   String
  description     String
  email           String    @default("")
  address         String    @default("")
  phone           String    @default("")
  departureDate   String    @default("")
  idEntry         String
  entry           Entry     @relation(fields: [idEntry], references: [id])
  products        Product[] // Relaci贸n        

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Product {
  id               String    @id @default(uuid())
  name             String
  observations     String?   @default("none")
  dimensions       String?   @default("none")
  zoneFQuantity    Int       @default(0)
  nationalQuantity Int       @default(0)
  patioQuantity    Int       @default(0)
  blNumber         String
  ruc              String    @default("none")
  customerName     String    @default("none")
  freeDays         String    @default("")
  dayValue         String    @default("")
  daysToPay        String    @default("") //dias hasta el pago
  payment          String    @default("")
  date             String    @default("")
  active           Boolean   @default(true)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  containerId      String
  container        Container @relation(fields: [containerId], references: [id])
}

model Exit {
  id           String  @id @default(uuid())
  quantity     String? @default("")
  liqNumber    String?
  date         String?
  transCompany String?
  driverName   String?
  truckPlate   String?
  exitType     String  @default("1")
  productId    String  @default("")
  entryId      String  @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Date {
  id        String   @id @default(uuid())
  date      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Employee {
//   dni      String   @id 
//   name     String
//   phone    String   @unique
//   email    String   @unique
//   country  String
//   salary   Float 
//   user   User @relation(fields: [userId], references: [id])
//   userId String
//   createdAt      DateTime       @default(now())
//   updatedAt      DateTime       @updatedAt
// }

// model Customer {
//   dni      String   @id 
//   dniType  String 
//   name     String
//   email    String   @unique
//   phone    String   @db.VarChar(20)
//   country  String   
//   products     Product[]    
//   user   User @relation(fields: [userId], references: [id])
//   userId String
//   createdAt      DateTime       @default(now())
//   updatedAt      DateTime       @updatedAt
// }

// model Product {
//   id       String   @id @default(uuid()) 
//   name     String
//   email    String   @unique
//   phone    String   @db.VarChar(20)   
//   customer Customer @relation(fields: [customerId], references: [dni])
//   customerId  String
//   warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
//   warehouseId String
//   createdAt      DateTime       @default(now())
//   updatedAt      DateTime       @updatedAt
// }

// model Warehouse {
//   id       String   @id @default(uuid()) 
//   name     String
//   description String
//   products Product[]
//   createdAt      DateTime       @default(now())
//   updatedAt      DateTime       @updatedAt
// }
